kind: Service
apiVersion: v1
metadata:
  name: nlp-booth-bundle
spec:
  selector:
    app: nlp-booth-bundle
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nlp-booth-bundle
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nlp-booth-bundle
  template:
    metadata:
      labels:
        app: nlp-booth-bundle
    spec:
      imagePullSecrets:
        - name: nlp-booth-bundle
      containers:
      - name: nlp-booth-bundle
        image: docker.io/mfojtak/nlpbooth:latest
        workingDir: /project
        command: ['streamlit', 'run', 'dashboard.py', '--server.port', '80', '--server.address', '0.0.0.0']
        ports:
        - containerPort: 80
        env:
        - name: https_proxy
          value: http://useh-proxy.na.novartis.net:2010
        - name: http_proxy
          value: http://useh-proxy.na.novartis.net:2011
        volumeMounts:
        - name: pvc-1
          mountPath: /data
        resources:
          requests:
            cpu: 8
          limits:
            cpu: 8
      volumes:
      - name: pvc-1
        persistentVolumeClaim:
          claimName: computec-workspace-claim
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: nlp-booth-bundle
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nlp-booth-bundle
  minReplicas: 4
  maxReplicas: 8
  targetCPUUtilizationPercentage: 50
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nlp-booth-bundle
  annotations:
    #nginx.ingress.kubernetes.io/rewrite-target: /
    #nginx.ingress.kubernetes.io/add-base-url: "True"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"

spec:
  rules:
  - host: nlp.novartis.net
    http:
      paths:
      - backend:
          serviceName: nlp-booth-bundle
          servicePort: 80
        